import { ParamValueSerializedTypeMap } from "@polygonjs/polygonjs/dist/src/engine/params/types/ParamValueSerializedTypeMap";

import { PolyScene } from "@polygonjs/polygonjs/dist/src/engine/scene/PolyScene";
// obj
import { AmbientLightObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/AmbientLight";
import { GeoObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/Geo";
// sop
import { ActorSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Actor";
import { AnimationsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AnimationsNetwork";
import { AttribPromoteSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AttribPromote";
import { CopySopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Copy";
import { CurveGetPointSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/CurveGetPoint";
import { FileOBJSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/FileOBJ";
import { FileSVGSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/FileSVG";
import { InstanceSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Instance";
import { MaterialsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/MaterialsNetwork";
import { NoiseSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Noise";
import { ParticlesSystemGpuSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/ParticlesSystemGpu";
import { PerspectiveCameraSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PerspectiveCamera";
import { PointSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Point";
import { RestAttributesSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/RestAttributes";
import { ScatterSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Scatter";
import { SphereSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Sphere";
import { TransformSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Transform";
// mat
import { MeshBasicBuilderMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshBasicBuilder";
import { MeshLambertBuilderMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshLambertBuilder";
import { PointsBuilderMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/PointsBuilder";
// anim
import { DurationAnimNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/anim/Duration";
import { EasingAnimNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/anim/Easing";
import { NullAnimNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/anim/Null";
import { PlayAnimNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/anim/Play";
import { PropertyNameAnimNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/anim/PropertyName";
import { PropertyValueAnimNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/anim/PropertyValue";
import { TargetAnimNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/anim/Target";

export class PolySceneWithNodeMap_jokuh_web extends PolyScene {
  node(path: "/ambientLight2"): AmbientLightObjNode;
  node(path: "/particles1"): GeoObjNode;
  node(path: "/particles1/instance1"): InstanceSopNode;
  node(path: "/particles1/restAttributes1"): RestAttributesSopNode;
  node(path: "/particles1/sphere1"): SphereSopNode;
  node(path: "/particles1/point2"): PointSopNode;
  node(path: "/particles1/scatter2"): ScatterSopNode;
  node(path: "/particles1/fileOBJ1"): FileOBJSopNode;
  node(path: "/particles1/copy1"): CopySopNode;
  node(path: "/particles1/MAT"): MaterialsNetworkSopNode;
  node(
    path: "/particles1/MAT/meshBasicBuilder_INSTANCES"
  ): MeshBasicBuilderMatNode;
  node(
    path: "/particles1/MAT/meshBasicBuilder_INSTANCES_PARTICLES"
  ): MeshBasicBuilderMatNode;
  node(path: "/particles1/MAT/pointsParticles"): PointsBuilderMatNode;
  node(path: "/particles1/actor_particles1"): ActorSopNode;
  node(path: "/particles1/particlesSystemGpu1"): ParticlesSystemGpuSopNode;
  node(path: "/particles1/actor2"): ActorSopNode;
  node(path: "/particles1/actor4"): ActorSopNode;
  node(path: "/cameras2"): GeoObjNode;
  node(path: "/cameras2/perspectiveCamera1"): PerspectiveCameraSopNode;
  node(path: "/geo1"): GeoObjNode;
  node(path: "/geo1/fileSVG1"): FileSVGSopNode;
  node(path: "/geo1/transform1"): TransformSopNode;
  node(path: "/geo1/instance1"): InstanceSopNode;
  node(path: "/geo1/sphere1"): SphereSopNode;
  node(path: "/geo1/noise1"): NoiseSopNode;
  node(path: "/geo1/attribPromote1"): AttribPromoteSopNode;
  node(path: "/geo1/curveGetPoint2"): CurveGetPointSopNode;
  node(path: "/geo1/MAT"): MaterialsNetworkSopNode;
  node(
    path: "/geo1/MAT/meshLambertBuilder_INSTANCES"
  ): MeshLambertBuilderMatNode;
  node(path: "/geo1/animationsNetwork1"): AnimationsNetworkSopNode;
  node(path: "/geo1/animationsNetwork1/duration1"): DurationAnimNode;
  node(path: "/geo1/animationsNetwork1/easing1"): EasingAnimNode;
  node(path: "/geo1/animationsNetwork1/propertyName1"): PropertyNameAnimNode;
  node(path: "/geo1/animationsNetwork1/propertyValue2"): PropertyValueAnimNode;
  node(path: "/geo1/animationsNetwork1/PLAY"): NullAnimNode;
  node(path: "/geo1/animationsNetwork1/RESET"): NullAnimNode;
  node(path: "/geo1/animationsNetwork1/CONTROLS"): PlayAnimNode;
  node(path: "/geo1/animationsNetwork1/propertyValue1"): PropertyValueAnimNode;
  node(path: "/geo1/animationsNetwork1/target2"): TargetAnimNode;
  node(path: "/geo1/animationsNetwork1/propertyValue3"): PropertyValueAnimNode;
  node(path: "/geo1/actor1"): ActorSopNode;
  node(
    path: string
  ): any /* we need any for now as otherwise an error occurs when adding plugins to the overloaded methods */ {
    return super.node(path);
  }
}

export interface PolySceneProps_jokuh_web {
  "ambientLight2--color"?: ParamValueSerializedTypeMap["color"];
  "ambientLight2--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "ambientLight2--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "ambientLight2--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "ambientLight2--colorr"?: ParamValueSerializedTypeMap["float"];
  "ambientLight2--colorg"?: ParamValueSerializedTypeMap["float"];
  "ambientLight2--colorb"?: ParamValueSerializedTypeMap["float"];
  "ambientLight2--intensity"?: ParamValueSerializedTypeMap["float"];
  "ambientLight2--name"?: ParamValueSerializedTypeMap["string"];
  "particles1--transform"?: ParamValueSerializedTypeMap["folder"];
  "particles1--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "particles1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "particles1--t"?: ParamValueSerializedTypeMap["vector3"];
  "particles1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "particles1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "particles1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "particles1--tx"?: ParamValueSerializedTypeMap["float"];
  "particles1--ty"?: ParamValueSerializedTypeMap["float"];
  "particles1--tz"?: ParamValueSerializedTypeMap["float"];
  "particles1--r"?: ParamValueSerializedTypeMap["vector3"];
  "particles1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "particles1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "particles1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "particles1--rx"?: ParamValueSerializedTypeMap["float"];
  "particles1--ry"?: ParamValueSerializedTypeMap["float"];
  "particles1--rz"?: ParamValueSerializedTypeMap["float"];
  "particles1--s"?: ParamValueSerializedTypeMap["vector3"];
  "particles1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "particles1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "particles1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "particles1--sx"?: ParamValueSerializedTypeMap["float"];
  "particles1--sy"?: ParamValueSerializedTypeMap["float"];
  "particles1--sz"?: ParamValueSerializedTypeMap["float"];
  "particles1--scale"?: ParamValueSerializedTypeMap["float"];
  "particles1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "particles1--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "particles1--display"?: ParamValueSerializedTypeMap["boolean"];
  "particles1--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "particles1--CAD"?: ParamValueSerializedTypeMap["folder"];
  "particles1--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "particles1--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "particles1--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "particles1--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "particles1--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "particles1--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "particles1--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "particles1--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "particles1--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "particles1--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "particles1--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "particles1--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "particles1--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "particles1--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "particles1--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "particles1--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "particles1--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "particles1--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "particles1--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "particles1--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "particles1--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "particles1--CSG"?: ParamValueSerializedTypeMap["folder"];
  "particles1--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "particles1--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "particles1--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "particles1--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "particles1--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "particles1--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "particles1--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "particles1--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "particles1--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "particles1--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "particles1--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "particles1--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "particles1--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "particles1--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "particles1--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "particles1--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "particles1--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "particles1--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "particles1--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "particles1--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "particles1--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "particles1--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "particles1--TET"?: ParamValueSerializedTypeMap["folder"];
  "particles1--TetScale"?: ParamValueSerializedTypeMap["float"];
  "particles1--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "particles1--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "particles1--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "particles1--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "particles1--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "particles1--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "particles1--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-instance1--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "particles1-instance1--applyMaterial"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-instance1--material"?: ParamValueSerializedTypeMap["node_path"];
  "particles1-restAttributes1--tposition"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-restAttributes1--position"?: ParamValueSerializedTypeMap["string"];
  "particles1-restAttributes1--restP"?: ParamValueSerializedTypeMap["string"];
  "particles1-restAttributes1--tnormal"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-restAttributes1--normal"?: ParamValueSerializedTypeMap["string"];
  "particles1-restAttributes1--restN"?: ParamValueSerializedTypeMap["string"];
  "particles1-sphere1--type"?: ParamValueSerializedTypeMap["integer"];
  "particles1-sphere1--radius"?: ParamValueSerializedTypeMap["float"];
  "particles1-sphere1--resolution"?: ParamValueSerializedTypeMap["vector2"];
  "particles1-sphere1--resolution-resolutionx"?: ParamValueSerializedTypeMap["float"];
  "particles1-sphere1--resolution-resolutiony"?: ParamValueSerializedTypeMap["float"];
  "particles1-sphere1--resolutionx"?: ParamValueSerializedTypeMap["float"];
  "particles1-sphere1--resolutiony"?: ParamValueSerializedTypeMap["float"];
  "particles1-sphere1--open"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-sphere1--phiStart"?: ParamValueSerializedTypeMap["float"];
  "particles1-sphere1--phiLength"?: ParamValueSerializedTypeMap["float"];
  "particles1-sphere1--thetaStart"?: ParamValueSerializedTypeMap["float"];
  "particles1-sphere1--thetaLength"?: ParamValueSerializedTypeMap["float"];
  "particles1-sphere1--detail"?: ParamValueSerializedTypeMap["integer"];
  "particles1-sphere1--center"?: ParamValueSerializedTypeMap["vector3"];
  "particles1-sphere1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "particles1-sphere1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "particles1-sphere1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "particles1-sphere1--centerx"?: ParamValueSerializedTypeMap["float"];
  "particles1-sphere1--centery"?: ParamValueSerializedTypeMap["float"];
  "particles1-sphere1--centerz"?: ParamValueSerializedTypeMap["float"];
  "particles1-sphere1--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-point2--updateX"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-point2--x"?: ParamValueSerializedTypeMap["float"];
  "particles1-point2--updateY"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-point2--y"?: ParamValueSerializedTypeMap["float"];
  "particles1-point2--updateZ"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-point2--z"?: ParamValueSerializedTypeMap["float"];
  "particles1-point2--updateNormals"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-scatter2--pointsCount"?: ParamValueSerializedTypeMap["integer"];
  "particles1-scatter2--seed"?: ParamValueSerializedTypeMap["integer"];
  "particles1-scatter2--useWeightAttribute"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-scatter2--weightAttribute"?: ParamValueSerializedTypeMap["string"];
  "particles1-scatter2--transferAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-scatter2--attributesToTransfer"?: ParamValueSerializedTypeMap["string"];
  "particles1-scatter2--addIdAttribute"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-scatter2--addIdnAttribute"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-fileOBJ1--url"?: ParamValueSerializedTypeMap["string"];
  "particles1-fileOBJ1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-fileOBJ1--reload"?: ParamValueSerializedTypeMap["button"];
  "particles1-copy1--srcGroup"?: ParamValueSerializedTypeMap["string"];
  "particles1-copy1--templateGroup"?: ParamValueSerializedTypeMap["string"];
  "particles1-copy1--count"?: ParamValueSerializedTypeMap["integer"];
  "particles1-copy1--t"?: ParamValueSerializedTypeMap["vector3"];
  "particles1-copy1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "particles1-copy1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "particles1-copy1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "particles1-copy1--tx"?: ParamValueSerializedTypeMap["float"];
  "particles1-copy1--ty"?: ParamValueSerializedTypeMap["float"];
  "particles1-copy1--tz"?: ParamValueSerializedTypeMap["float"];
  "particles1-copy1--r"?: ParamValueSerializedTypeMap["vector3"];
  "particles1-copy1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "particles1-copy1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "particles1-copy1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "particles1-copy1--rx"?: ParamValueSerializedTypeMap["float"];
  "particles1-copy1--ry"?: ParamValueSerializedTypeMap["float"];
  "particles1-copy1--rz"?: ParamValueSerializedTypeMap["float"];
  "particles1-copy1--s"?: ParamValueSerializedTypeMap["vector3"];
  "particles1-copy1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "particles1-copy1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "particles1-copy1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "particles1-copy1--sx"?: ParamValueSerializedTypeMap["float"];
  "particles1-copy1--sy"?: ParamValueSerializedTypeMap["float"];
  "particles1-copy1--sz"?: ParamValueSerializedTypeMap["float"];
  "particles1-copy1--scale"?: ParamValueSerializedTypeMap["float"];
  "particles1-copy1--transformOnly"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-copy1--transformMode"?: ParamValueSerializedTypeMap["integer"];
  "particles1-copy1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "particles1-copy1--copyAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-copy1--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "particles1-copy1--useCopyExpr"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--default"?: ParamValueSerializedTypeMap["folder"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--opacity"?: ParamValueSerializedTypeMap["float"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--textures"?: ParamValueSerializedTypeMap["folder"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--map"?: ParamValueSerializedTypeMap["node_path"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--combine"?: ParamValueSerializedTypeMap["integer"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--reflectivity"?: ParamValueSerializedTypeMap["float"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--refractionRatio"?: ParamValueSerializedTypeMap["float"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--advanced"?: ParamValueSerializedTypeMap["folder"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--front"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--blending"?: ParamValueSerializedTypeMap["integer"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--overrideCustomMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--createCustomMatDistance"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--createCustomMatDepth"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--createCustomMatDepthDOF"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES--ramp1"?: ParamValueSerializedTypeMap["ramp"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--default"?: ParamValueSerializedTypeMap["folder"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--opacity"?: ParamValueSerializedTypeMap["float"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--textures"?: ParamValueSerializedTypeMap["folder"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--map"?: ParamValueSerializedTypeMap["node_path"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--combine"?: ParamValueSerializedTypeMap["integer"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--reflectivity"?: ParamValueSerializedTypeMap["float"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--refractionRatio"?: ParamValueSerializedTypeMap["float"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--advanced"?: ParamValueSerializedTypeMap["folder"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--front"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--blending"?: ParamValueSerializedTypeMap["integer"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--overrideCustomMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--createCustomMatDistance"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--createCustomMatDepth"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--createCustomMatDepthDOF"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-meshBasicBuilder_INSTANCES_PARTICLES--ramp1"?: ParamValueSerializedTypeMap["ramp"];
  "particles1-MAT-pointsParticles--default"?: ParamValueSerializedTypeMap["folder"];
  "particles1-MAT-pointsParticles--size"?: ParamValueSerializedTypeMap["float"];
  "particles1-MAT-pointsParticles--sizeAttenuation"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-pointsParticles--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-pointsParticles--opacity"?: ParamValueSerializedTypeMap["float"];
  "particles1-MAT-pointsParticles--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "particles1-MAT-pointsParticles--advanced"?: ParamValueSerializedTypeMap["folder"];
  "particles1-MAT-pointsParticles--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-pointsParticles--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "particles1-MAT-pointsParticles--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-pointsParticles--front"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-pointsParticles--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-pointsParticles--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-pointsParticles--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-pointsParticles--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-pointsParticles--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-pointsParticles--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-pointsParticles--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-pointsParticles--blending"?: ParamValueSerializedTypeMap["integer"];
  "particles1-MAT-pointsParticles--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-pointsParticles--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-pointsParticles--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "particles1-MAT-pointsParticles--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "particles1-MAT-pointsParticles--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-pointsParticles--overrideCustomMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-pointsParticles--createCustomMatDistance"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-pointsParticles--createCustomMatDepth"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-MAT-pointsParticles--createCustomMatDepthDOF"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-actor_particles1--group"?: ParamValueSerializedTypeMap["string"];
  "particles1-actor_particles1--useThisNode"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-actor_particles1--node"?: ParamValueSerializedTypeMap["node_path"];
  "particles1-particlesSystemGpu1--group"?: ParamValueSerializedTypeMap["string"];
  "particles1-particlesSystemGpu1--dataType"?: ParamValueSerializedTypeMap["integer"];
  "particles1-particlesSystemGpu1--preRollFramesCount"?: ParamValueSerializedTypeMap["integer"];
  "particles1-particlesSystemGpu1--material"?: ParamValueSerializedTypeMap["node_path"];
  "particles1-particlesSystemGpu1--cursor"?: ParamValueSerializedTypeMap["vector3"];
  "particles1-particlesSystemGpu1--cursor-cursorx"?: ParamValueSerializedTypeMap["float"];
  "particles1-particlesSystemGpu1--cursor-cursory"?: ParamValueSerializedTypeMap["float"];
  "particles1-particlesSystemGpu1--cursor-cursorz"?: ParamValueSerializedTypeMap["float"];
  "particles1-particlesSystemGpu1--cursorx"?: ParamValueSerializedTypeMap["float"];
  "particles1-particlesSystemGpu1--cursory"?: ParamValueSerializedTypeMap["float"];
  "particles1-particlesSystemGpu1--cursorz"?: ParamValueSerializedTypeMap["float"];
  "particles1-particlesSystemGpu1--ramp1"?: ParamValueSerializedTypeMap["ramp"];
  "particles1-particlesSystemGpu1--velocity"?: ParamValueSerializedTypeMap["vector3"];
  "particles1-particlesSystemGpu1--velocity-velocityx"?: ParamValueSerializedTypeMap["float"];
  "particles1-particlesSystemGpu1--velocity-velocityy"?: ParamValueSerializedTypeMap["float"];
  "particles1-particlesSystemGpu1--velocity-velocityz"?: ParamValueSerializedTypeMap["float"];
  "particles1-particlesSystemGpu1--velocityx"?: ParamValueSerializedTypeMap["float"];
  "particles1-particlesSystemGpu1--velocityy"?: ParamValueSerializedTypeMap["float"];
  "particles1-particlesSystemGpu1--velocityz"?: ParamValueSerializedTypeMap["float"];
  "particles1-actor2--group"?: ParamValueSerializedTypeMap["string"];
  "particles1-actor2--useThisNode"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-actor2--node"?: ParamValueSerializedTypeMap["node_path"];
  "particles1-actor4--group"?: ParamValueSerializedTypeMap["string"];
  "particles1-actor4--useThisNode"?: ParamValueSerializedTypeMap["boolean"];
  "particles1-actor4--node"?: ParamValueSerializedTypeMap["node_path"];
  "cameras2--transform"?: ParamValueSerializedTypeMap["folder"];
  "cameras2--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "cameras2--t"?: ParamValueSerializedTypeMap["vector3"];
  "cameras2--t-tx"?: ParamValueSerializedTypeMap["float"];
  "cameras2--t-ty"?: ParamValueSerializedTypeMap["float"];
  "cameras2--t-tz"?: ParamValueSerializedTypeMap["float"];
  "cameras2--tx"?: ParamValueSerializedTypeMap["float"];
  "cameras2--ty"?: ParamValueSerializedTypeMap["float"];
  "cameras2--tz"?: ParamValueSerializedTypeMap["float"];
  "cameras2--r"?: ParamValueSerializedTypeMap["vector3"];
  "cameras2--r-rx"?: ParamValueSerializedTypeMap["float"];
  "cameras2--r-ry"?: ParamValueSerializedTypeMap["float"];
  "cameras2--r-rz"?: ParamValueSerializedTypeMap["float"];
  "cameras2--rx"?: ParamValueSerializedTypeMap["float"];
  "cameras2--ry"?: ParamValueSerializedTypeMap["float"];
  "cameras2--rz"?: ParamValueSerializedTypeMap["float"];
  "cameras2--s"?: ParamValueSerializedTypeMap["vector3"];
  "cameras2--s-sx"?: ParamValueSerializedTypeMap["float"];
  "cameras2--s-sy"?: ParamValueSerializedTypeMap["float"];
  "cameras2--s-sz"?: ParamValueSerializedTypeMap["float"];
  "cameras2--sx"?: ParamValueSerializedTypeMap["float"];
  "cameras2--sy"?: ParamValueSerializedTypeMap["float"];
  "cameras2--sz"?: ParamValueSerializedTypeMap["float"];
  "cameras2--scale"?: ParamValueSerializedTypeMap["float"];
  "cameras2--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "cameras2--display"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "cameras2--CAD"?: ParamValueSerializedTypeMap["folder"];
  "cameras2--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras2--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras2--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2--CSG"?: ParamValueSerializedTypeMap["folder"];
  "cameras2--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras2--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras2--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras2--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "cameras2--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2--TET"?: ParamValueSerializedTypeMap["folder"];
  "cameras2--TetScale"?: ParamValueSerializedTypeMap["float"];
  "cameras2--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2-perspectiveCamera1--default"?: ParamValueSerializedTypeMap["folder"];
  "cameras2-perspectiveCamera1--fov"?: ParamValueSerializedTypeMap["float"];
  "cameras2-perspectiveCamera1--near"?: ParamValueSerializedTypeMap["float"];
  "cameras2-perspectiveCamera1--far"?: ParamValueSerializedTypeMap["float"];
  "cameras2-perspectiveCamera1--position"?: ParamValueSerializedTypeMap["vector3"];
  "cameras2-perspectiveCamera1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras2-perspectiveCamera1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras2-perspectiveCamera1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras2-perspectiveCamera1--positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras2-perspectiveCamera1--positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras2-perspectiveCamera1--positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras2-perspectiveCamera1--rotation"?: ParamValueSerializedTypeMap["vector3"];
  "cameras2-perspectiveCamera1--rotation-rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras2-perspectiveCamera1--rotation-rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras2-perspectiveCamera1--rotation-rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras2-perspectiveCamera1--rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras2-perspectiveCamera1--rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras2-perspectiveCamera1--rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras2-perspectiveCamera1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2-perspectiveCamera1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras2-perspectiveCamera1--name"?: ParamValueSerializedTypeMap["string"];
  "cameras2-perspectiveCamera1--updateTransformFromCamera"?: ParamValueSerializedTypeMap["button"];
  "cameras2-perspectiveCamera1--PBR"?: ParamValueSerializedTypeMap["folder"];
  "cameras2-perspectiveCamera1--apertureBlades"?: ParamValueSerializedTypeMap["integer"];
  "cameras2-perspectiveCamera1--fStop"?: ParamValueSerializedTypeMap["float"];
  "cameras2-perspectiveCamera1--focusDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras2-perspectiveCamera1--apertureRotation"?: ParamValueSerializedTypeMap["float"];
  "cameras2-perspectiveCamera1--anamorphicRatio"?: ParamValueSerializedTypeMap["float"];
  "geo1--transform"?: ParamValueSerializedTypeMap["folder"];
  "geo1--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "geo1--display"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1--CAD"?: ParamValueSerializedTypeMap["folder"];
  "geo1--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--CSG"?: ParamValueSerializedTypeMap["folder"];
  "geo1--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "geo1--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TET"?: ParamValueSerializedTypeMap["folder"];
  "geo1--TetScale"?: ParamValueSerializedTypeMap["float"];
  "geo1--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileSVG1--url"?: ParamValueSerializedTypeMap["string"];
  "geo1-fileSVG1--reload"?: ParamValueSerializedTypeMap["button"];
  "geo1-fileSVG1--drawFillShapes"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileSVG1--fillShapesWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileSVG1--drawStrokes"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileSVG1--strokesWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileSVG1--tStyleOverride"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileSVG1--strokeWidth"?: ParamValueSerializedTypeMap["float"];
  "geo1-fileSVG1--tadvanced"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileSVG1--isCCW"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-transform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-instance1--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "geo1-instance1--applyMaterial"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-instance1--material"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-sphere1--type"?: ParamValueSerializedTypeMap["integer"];
  "geo1-sphere1--radius"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--resolution"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-sphere1--resolution-resolutionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--resolution-resolutiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--resolutionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--resolutiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--open"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-sphere1--phiStart"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--phiLength"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--thetaStart"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--thetaLength"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--detail"?: ParamValueSerializedTypeMap["integer"];
  "geo1-sphere1--center"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-sphere1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-noise1--amplitude"?: ParamValueSerializedTypeMap["float"];
  "geo1-noise1--tamplitudeAttrib"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-noise1--amplitudeAttrib"?: ParamValueSerializedTypeMap["string"];
  "geo1-noise1--freq"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-noise1--freq-freqx"?: ParamValueSerializedTypeMap["float"];
  "geo1-noise1--freq-freqy"?: ParamValueSerializedTypeMap["float"];
  "geo1-noise1--freq-freqz"?: ParamValueSerializedTypeMap["float"];
  "geo1-noise1--freqx"?: ParamValueSerializedTypeMap["float"];
  "geo1-noise1--freqy"?: ParamValueSerializedTypeMap["float"];
  "geo1-noise1--freqz"?: ParamValueSerializedTypeMap["float"];
  "geo1-noise1--offset"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-noise1--offset-offsetx"?: ParamValueSerializedTypeMap["float"];
  "geo1-noise1--offset-offsety"?: ParamValueSerializedTypeMap["float"];
  "geo1-noise1--offset-offsetz"?: ParamValueSerializedTypeMap["float"];
  "geo1-noise1--offsetx"?: ParamValueSerializedTypeMap["float"];
  "geo1-noise1--offsety"?: ParamValueSerializedTypeMap["float"];
  "geo1-noise1--offsetz"?: ParamValueSerializedTypeMap["float"];
  "geo1-noise1--octaves"?: ParamValueSerializedTypeMap["integer"];
  "geo1-noise1--ampAttenuation"?: ParamValueSerializedTypeMap["float"];
  "geo1-noise1--freqIncrease"?: ParamValueSerializedTypeMap["float"];
  "geo1-noise1--seed"?: ParamValueSerializedTypeMap["integer"];
  "geo1-noise1--useNormals"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-noise1--attribName"?: ParamValueSerializedTypeMap["string"];
  "geo1-noise1--useRestAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-noise1--restP"?: ParamValueSerializedTypeMap["string"];
  "geo1-noise1--restN"?: ParamValueSerializedTypeMap["string"];
  "geo1-noise1--operation"?: ParamValueSerializedTypeMap["integer"];
  "geo1-noise1--computeNormals"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-attribPromote1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-attribPromote1--classFrom"?: ParamValueSerializedTypeMap["integer"];
  "geo1-attribPromote1--classTo"?: ParamValueSerializedTypeMap["integer"];
  "geo1-attribPromote1--mode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-attribPromote1--name"?: ParamValueSerializedTypeMap["string"];
  "geo1-curveGetPoint2--t"?: ParamValueSerializedTypeMap["float"];
  "geo1-curveGetPoint2--closed"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-curveGetPoint2--curveType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-curveGetPoint2--tension"?: ParamValueSerializedTypeMap["float"];
  "geo1-curveGetPoint2--tTangent"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-curveGetPoint2--tangentName"?: ParamValueSerializedTypeMap["string"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--default"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--opacity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--textures"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--map"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--emissive"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--combine"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--reflectivity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--refractionRatio"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--advanced"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--front"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--blending"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--shadowPCSS"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--shadowPCSSFilterSize"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--overrideCustomMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--createCustomMatDistance"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--createCustomMatDepth"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshLambertBuilder_INSTANCES--createCustomMatDepthDOF"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-animationsNetwork1-duration1--duration"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-easing1--name"?: ParamValueSerializedTypeMap["integer"];
  "geo1-animationsNetwork1-easing1--inOut"?: ParamValueSerializedTypeMap["integer"];
  "geo1-animationsNetwork1-propertyName1--name"?: ParamValueSerializedTypeMap["string"];
  "geo1-animationsNetwork1-propertyValue2--mode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-animationsNetwork1-propertyValue2--nodePath"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-animationsNetwork1-propertyValue2--objectMask"?: ParamValueSerializedTypeMap["string"];
  "geo1-animationsNetwork1-propertyValue2--printResolve"?: ParamValueSerializedTypeMap["button"];
  "geo1-animationsNetwork1-propertyValue2--overridePropertyName"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-animationsNetwork1-propertyValue2--propertyName"?: ParamValueSerializedTypeMap["string"];
  "geo1-animationsNetwork1-propertyValue2--size"?: ParamValueSerializedTypeMap["integer"];
  "geo1-animationsNetwork1-propertyValue2--value1"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--value2"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-animationsNetwork1-propertyValue2--value2-value2x"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--value2-value2y"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--value2x"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--value2y"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--value3"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-animationsNetwork1-propertyValue2--value3-value3x"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--value3-value3y"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--value3-value3z"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--value3x"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--value3y"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--value3z"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--color"?: ParamValueSerializedTypeMap["color"];
  "geo1-animationsNetwork1-propertyValue2--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--value4"?: ParamValueSerializedTypeMap["vector4"];
  "geo1-animationsNetwork1-propertyValue2--value4-value4x"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--value4-value4y"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--value4-value4z"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--value4-value4w"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--value4x"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--value4y"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--value4z"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--value4w"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue2--asColor"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-animationsNetwork1-PLAY--play"?: ParamValueSerializedTypeMap["button"];
  "geo1-animationsNetwork1-PLAY--pause"?: ParamValueSerializedTypeMap["button"];
  "geo1-animationsNetwork1-PLAY--stoppable"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-animationsNetwork1-PLAY--debug"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-animationsNetwork1-RESET--play"?: ParamValueSerializedTypeMap["button"];
  "geo1-animationsNetwork1-RESET--pause"?: ParamValueSerializedTypeMap["button"];
  "geo1-animationsNetwork1-RESET--stoppable"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-animationsNetwork1-RESET--debug"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-animationsNetwork1-CONTROLS--play"?: ParamValueSerializedTypeMap["button"];
  "geo1-animationsNetwork1-CONTROLS--pause"?: ParamValueSerializedTypeMap["button"];
  "geo1-animationsNetwork1-CONTROLS--reset"?: ParamValueSerializedTypeMap["button"];
  "geo1-animationsNetwork1-CONTROLS--stoppable"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-animationsNetwork1-CONTROLS--debug"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-animationsNetwork1-CONTROLS--seek"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--mode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-animationsNetwork1-propertyValue1--nodePath"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-animationsNetwork1-propertyValue1--objectMask"?: ParamValueSerializedTypeMap["string"];
  "geo1-animationsNetwork1-propertyValue1--printResolve"?: ParamValueSerializedTypeMap["button"];
  "geo1-animationsNetwork1-propertyValue1--overridePropertyName"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-animationsNetwork1-propertyValue1--propertyName"?: ParamValueSerializedTypeMap["string"];
  "geo1-animationsNetwork1-propertyValue1--size"?: ParamValueSerializedTypeMap["integer"];
  "geo1-animationsNetwork1-propertyValue1--value1"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--value2"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-animationsNetwork1-propertyValue1--value2-value2x"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--value2-value2y"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--value2x"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--value2y"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--value3"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-animationsNetwork1-propertyValue1--value3-value3x"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--value3-value3y"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--value3-value3z"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--value3x"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--value3y"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--value3z"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--color"?: ParamValueSerializedTypeMap["color"];
  "geo1-animationsNetwork1-propertyValue1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--value4"?: ParamValueSerializedTypeMap["vector4"];
  "geo1-animationsNetwork1-propertyValue1--value4-value4x"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--value4-value4y"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--value4-value4z"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--value4-value4w"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--value4x"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--value4y"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--value4z"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--value4w"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue1--asColor"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-animationsNetwork1-target2--type"?: ParamValueSerializedTypeMap["integer"];
  "geo1-animationsNetwork1-target2--nodePath"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-animationsNetwork1-target2--objectMask"?: ParamValueSerializedTypeMap["string"];
  "geo1-animationsNetwork1-target2--updateMatrix"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-animationsNetwork1-target2--printResolve"?: ParamValueSerializedTypeMap["button"];
  "geo1-animationsNetwork1-propertyValue3--mode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-animationsNetwork1-propertyValue3--nodePath"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-animationsNetwork1-propertyValue3--objectMask"?: ParamValueSerializedTypeMap["string"];
  "geo1-animationsNetwork1-propertyValue3--printResolve"?: ParamValueSerializedTypeMap["button"];
  "geo1-animationsNetwork1-propertyValue3--overridePropertyName"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-animationsNetwork1-propertyValue3--propertyName"?: ParamValueSerializedTypeMap["string"];
  "geo1-animationsNetwork1-propertyValue3--size"?: ParamValueSerializedTypeMap["integer"];
  "geo1-animationsNetwork1-propertyValue3--value1"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--value2"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-animationsNetwork1-propertyValue3--value2-value2x"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--value2-value2y"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--value2x"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--value2y"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--value3"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-animationsNetwork1-propertyValue3--value3-value3x"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--value3-value3y"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--value3-value3z"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--value3x"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--value3y"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--value3z"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--color"?: ParamValueSerializedTypeMap["color"];
  "geo1-animationsNetwork1-propertyValue3--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--value4"?: ParamValueSerializedTypeMap["vector4"];
  "geo1-animationsNetwork1-propertyValue3--value4-value4x"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--value4-value4y"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--value4-value4z"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--value4-value4w"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--value4x"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--value4y"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--value4z"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--value4w"?: ParamValueSerializedTypeMap["float"];
  "geo1-animationsNetwork1-propertyValue3--asColor"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-actor1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-actor1--useThisNode"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-actor1--node"?: ParamValueSerializedTypeMap["node_path"];
}
